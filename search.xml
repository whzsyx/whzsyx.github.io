<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>typora-vue-theme主题介绍</title>
      <link href="/2023/09/21/test/"/>
      <url>/2023/09/21/test/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习</title>
      <link href="/2023/02/27/python-xue-xi/"/>
      <url>/2023/02/27/python-xue-xi/</url>
      
        <content type="html"><![CDATA[<p>循环语句：<br>在嵌套 if 语句中，可以把 if…elif…else 结构放在另外一个 if…elif…else 结构中。</p><pre class="line-numbers language-none"><code class="language-none">if 表达式1:    语句    if 表达式2:        语句    elif 表达式3:        语句    else:        语句elif 表达式4:    语句else:    语句<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="han-shu-de-xue-xi"><a href="#函数的学习" class="headerlink" title="函数的学习"></a>函数的学习<a href="#han-shu-de-xue-xi" class="header-anchor">#</a></h1><ol><li>函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。</li><li>函数能提高应用的模块性，和代码的重复利用率。你已经知道Python提供了许多内建函数，比如print()。 但你也可以自己创建函数，这被叫做用户自定义函数。</li></ol><blockquote><p>定义一个函数打印25个-</p></blockquote><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">def printLine():    print(25 * "-")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">def printLine():    print(25 * "-")def printline1(ac, bd):    print(ac * bd)print("函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。")printLine()print("函数能提高应用的模块性，和代码的重复利用率。\n你已经知道Python提供了许多内建函数，比如print()。\n但你也可以自己创建函数，这被叫做用户自定义函数")printline1(10, "*")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="ding-yi-yi-ge-add-han-shu"><a href="#定义一个add函数" class="headerlink" title="定义一个add函数"></a>定义一个add函数<a href="#ding-yi-yi-ge-add-han-shu" class="header-anchor">#</a></h1><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">def add(z,j):    z + j    return z + jx = int(input("请输入x:"))y = int(input("请输入y:"))print("x + y = ",add(x, y))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>下标:indexes<br>值:  values</p></blockquote><h1 id="shu-ju-lei-xing"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型<a href="#shu-ju-lei-xing" class="header-anchor">#</a></h1><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">l = ["a", "b", "c", "d", "e", "f"]print("列表里面第二个元素：", l[1])l[3] = "n"l.append("xyz")del l[1]i = 1for li in l:    print("遍历集合中的元素：", i, "个", li)    i += 1# i = i + 1print(25 * "-")# list的操作list = ["a", "b", "c", "d", "e"]list1 = ["f", "g", "h", "d"]# # append是整体添加数据# list.append(list1)# print(list)# print(len(list))# # expend是list1里面的数据挨个添加list.extend(list1)print(len(list))print(list)list2 = ["aa", "bb", "cc", "dd", "ee"]# 清空列表里面的所有数据list2.clear()# 删除列表里面的最后一个元素list2.pop()# 根据内容删除数据list2.remove()# 根据下表删除数据del list2[1]print(list2)# 字典# 语法{"key1":values1, "key2":values2, "key3":values3}, key不可重复, values可重复d1 = {'局长': '张三', '市长': '李六', '县长': "王五"}d1['省长'] = '李四'print(d1)print(d1['局长'])d1['局长'] = '王五'print(d1)# 清除字典的所有数据# d1.clear()d1.pop('局长')for a1 in d1:    print('key=', a1, 'values=', d1[a1])# 字典# 语法{"key1":values1, "key2":values2, "key3":values3}, key不可重复, values可重复d1 = {'局长': '张三', '市长': '李六', '县长': "王五"}d1['省长'] = '李四'print(d1)print(d1['局长'])d1['局长'] = '王五'print(d1)# 清除字典的所有数据# d1.clear()d1.pop('局长')for a1 in d1:    print('key=', a1, 'values=', d1[a1])<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="ding-yi-yi-ge-lie-biao-bao-han-xue-sheng-de-cheng-ji-yi-chu-xiao-yu-60-fen-de-cheng-ji"><a href="#定义一个列表，包含学生的成绩，移除小于60分的成绩" class="headerlink" title="定义一个列表，包含学生的成绩，移除小于60分的成绩"></a>定义一个列表，包含学生的成绩，移除小于60分的成绩<a href="#ding-yi-yi-ge-lie-biao-bao-han-xue-sheng-de-cheng-ji-yi-chu-xiao-yu-60-fen-de-cheng-ji" class="header-anchor">#</a></h6><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">l = [34, 67, 65, 58, 95, 69]for j in l:    if j &lt; 60:        l.remove(j)print(l)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Python 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件测试</title>
      <link href="/2023/02/26/ruan-jian-ce-shi/"/>
      <url>/2023/02/26/ruan-jian-ce-shi/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis学习</title>
      <link href="/2022/05/18/redis-xue-xi/"/>
      <url>/2022/05/18/redis-xue-xi/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习</title>
      <link href="/2022/05/18/mysql-xue-xi/"/>
      <url>/2022/05/18/mysql-xue-xi/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux学习</title>
      <link href="/2022/05/18/linux-xue-xi/"/>
      <url>/2022/05/18/linux-xue-xi/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/2022/05/18/linux/"/>
      <url>/2022/05/18/linux/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Linux 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java</title>
      <link href="/2022/05/17/java/"/>
      <url>/2022/05/17/java/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Java 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python</title>
      <link href="/2022/05/15/python/"/>
      <url>/2022/05/15/python/</url>
      
        <content type="html"><![CDATA[<blockquote><p>学习Python的小白</p></blockquote><span id="more"></span><h2 id="xue-xi-mu-biao"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标<a href="#xue-xi-mu-biao" class="header-anchor">#</a></h2>    <div class="markmap-container" style="height:300px">      <svg data="{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;基础知识&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;初识Python&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;熟悉Python开发环境，并且学会编写HelloWord程序&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;Python语言基础&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;掌握最基础语法，变量，数据类型，输入输出函数&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;运算符与表达式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;掌握Python中的运算符和条件表达式的应用&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;流程控制语句&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;深入学习程序结构，控制语句的流程走向&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;列表和元组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;掌握序列中的列表与元组的应用技能&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;字典和集合&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;掌握两种不重复且无序的数据结构字典和集合&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;字符串&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;深入学习字符串操作的相关知识&quot;}]}]}"/>    </div>  <h2 id="python-mian-shi-ti-jing-xuan"><a href="#Python面试题精选" class="headerlink" title="Python面试题精选"></a>Python面试题精选<a href="#python-mian-shi-ti-jing-xuan" class="header-anchor">#</a></h2><p>1 一行代码实现1–100之和( 利用sun()求和)<br>网上的答案是通过 range 生成 1 至 100 的整数，然后用 sum 求和：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">&gt;&gt;&gt;# 解法一&gt;&gt;&gt;sum(range(1,101))5050<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这行代码确实很有美感，但你想过没有：如果是求 1 至 10000000000 之和呢？候选人必须认识到这是一个 O(N) 算法，真的适合所有场景吗？为什么不用等差数列前 N 项和公式进行计算呢？</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt;# 解法二&gt;&gt;&gt;n = 100&gt;&gt;&gt;(n+1) * n &gt;&gt;15050<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>采用前 N 项和公式，求和时间复杂度是 O(1) ，孰优孰劣应该很明显了吧。大家可以对比下当 N 很大时，这两种计算方式的表现：</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt; n = 100000000&gt;&gt;&gt; sum(range(1, n+1))5000000050000000&gt;&gt;&gt; (n + 1) * n &gt;&gt; 15000000050000000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2 如何在一个函数内部修改全局变量</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">a = 5def fn():    global a    a = 4fn()print(a)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>相关概念<ul><li>变量作用域 ( scope )</li><li>局部名字空间 ( locals )</li><li>闭包名字空间 ( globals )</li><li>全局名字空间 ( enclosing )</li><li>内建名字空间 ( builtin )</li></ul></li></ul><p>3 请描述执行以下程序将输出什么内容？并试着解释其中的原因？</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">def add(n, l=[]):    l.append(n)    return lprint(add(1))print(add(2))print(add(3))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>输出log</p></blockquote><pre class="line-numbers language-none"><code class="language-none">[1][1, 2][1, 2, 3]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>4 列出5个Python标准库</p><ul><li><a href="https://docs.python.org/3/library/re.html">re</a>, 正则表达式处理</li><li><a href="https://docs.python.org/3/library/datetime.html">datetime</a>, 日期时间处理</li><li><a href="https://docs.python.org/3/library/json.html">json</a>, JSON数据处理</li><li><a href="https://docs.python.org/3/library/math.html">math</a>, 数学计算</li><li><a href="https://docs.python.org/3/library/random.html">random</a>, 随机数</li><li><a href="https://docs.python.org/3/library/os.html">os</a>, 系统调用</li><li><a href="https://docs.python.org/3/library/socket.html">socket</a>, 套接字编程与网络通讯</li><li><a href="https://docs.python.org/3/library/threading.html">threading</a>, 多线程处理</li><li><a href="https://docs.python.org/3/library/multiprocessing.html">multiprocessing</a>, 多进程处理</li><li><a href="https://docs.python.org/3/library/queue.html">queue</a>, 同步任务队列</li></ul><p>5 字典如何删除键<br>方式一: 使用 del 语句进行删除， del 关键字还可用于删除 变量 、 属性 ：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">&gt;&gt;&gt;ages = {'tom' : 18, 'jim' : 20, 'lily' : 19}&gt;&gt;&gt;del ages['jim']&gt;&gt;&gt;ages{'tom' : 18, 'lily' : 19} <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>方法二 ，调用 pop 方法进行删除，这样可以拿到被删除键对应的值：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">&gt;&gt;&gt;ages = {'tom' : 18, 'jim' : 20, 'lily' : 19}&gt;&gt;&gt;jims_age = ages.pop('jim')&gt;&gt;&gt;jims_age20&gt;&gt;&gt;ages{'tom' : 18, 'lily' : 19}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>6 如何合并两个字典</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">&gt;&gt;&gt;info1 = {'name' : 'jim', 'age' : 18}&gt;&gt;&gt;info2 = {'name' : 'jim', 'score' : 95}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>方法一 ，调用 dict 对象 update 方法：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">&gt;&gt;&gt;info1.update(info2)&gt;&gt;&gt;info{'name' : 'jim', age : 18, 'socre' : 95}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>方法二:</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt;info = {**info1, **info2}&gt;&gt;&gt;info{'name' : 'jim', age : 18, 'socre' : 95}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>7 Python 2 和 Python 3 中的 range(100) 的区别<br>Python 2 中的 range 函数返回一个列表，长度越大消耗内存越多：</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt;print(range(10))[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Python 2 中的 xrange 函数与 range 类似，但返回 生成器 ：</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt;r = xrange(10)&gt;&gt;&gt;ri = iter(r)&gt;&gt;&gt;next(ri)0&gt;&gt;&gt;next(ri)1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成器内存消耗固定，与长度无关。因此，循环一般使用 xrange ：</p><pre class="line-numbers language-none"><code class="language-none">for i in range(10000):    pass<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>由于生成器比较高效， Python 3 的 range 函数也选择返回生成器，可以认为与 Python 2 中的 xrange 等价：</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt; r = range(10)&gt;&gt;&gt; ri = iter(r)&gt;&gt;&gt; next(ri)0&gt;&gt;&gt; next(ri)1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Python 3 中也可以实现与 Python 2 中的 range 函数一样的效果：</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt;list(range(10))[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>8 Python列表如何去重</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt;l = [7, 3, 0, 3, 0, 8, 4, 9, 3, 8]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>先将列表转换成 集合 ( set )，由于集合元素不重复，便实现去重：</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt;set(l){0, 3, 4, 7, 8, 9}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>最后再将集合转化成列表即可：</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt;list(set(l))[0, 3, 4, 7, 8, 9]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>9 一句话解释什么样的语言能够用装饰器<br>函数可以 作为参数传递 、 可以作为返回值返回 的语言，都可以实现装饰器。<br>10 Python 内建数据类型有哪些</p><ul><li>布尔, bool</li><li>整数, int</li><li>浮点, float</li><li>字符串, str</li><li>字节序列, bytes</li><li>元组, tuple</li><li>列表, list</li><li>字典, dict</li></ul>    <style>.markmap-container{display:flex;justify-content:center;margin:0 auto;width:90%;height:500px}.markmap-container svg{width:100%;height:100%}@media(max-width:768px){.markmap-container{height:400px}}</style>    <script src="https://cdn.jsdelivr.net/npm/d3@6"></script>    <script src="https://cdn.jsdelivr.net/npm/markmap-view@0.2.7"></script>    <script> document.querySelectorAll('.markmap-container>svg').forEach(mindmap => markmap.Markmap.create(mindmap, null, JSON.parse(mindmap.getAttribute('data'))))</script>  <script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Python 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript</title>
      <link href="/2022/05/15/second/"/>
      <url>/2022/05/15/second/</url>
      
        <content type="html"><![CDATA[<h1 id="javascripts"><a href="#JavaScripts" class="headerlink" title="JavaScripts"></a>JavaScripts<a href="#javascripts" class="header-anchor">#</a></h1><blockquote><p>日暮</p></blockquote><p>javascript是一门充满活力、简单易用的语言，又是一门具有许多复杂微妙技术的语言。即使是经验丰富的javascript开发者，如果没有认真学习的话，也无法真正理解它们，这就是javascript的矛盾之处。由于javascript不必理解就可以使用，因此通常来说很难真正理解语言本身，这就是我们面临的挑战。不满足于只是让代码正常工作，而是想要弄清楚为什么，勇于挑战这条崎岖颠簸的少有人走的路，拥抱整个javascript</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇</title>
      <link href="/2022/05/14/di-yi-pian/"/>
      <url>/2022/05/14/di-yi-pian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>微信公众号：未知<br>git status 查看状态<br>git  add . 提交所有新文件<br>git commit -m “提交信息”<br>git pull origin master 提交到GitHub<br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br> 建议使用 <strong>Chrome</strong> 浏览器，体验最佳效果。<br> 夏天的风,吹皱了城市的喧嚣风吹走云朵,落叶飘向远方。<br><img src="/images/66095083_p0.png" alt="Picture" title="图片 "></p></blockquote><h2 id="scan"><a href="#Scan" class="headerlink" title="Scan"></a>Scan<a href="#scan" class="header-anchor">#</a></h2><ol><li>女孩的裙摆撑得起所有温柔和盛夏</li><li>整个夏天想和你环游全世界</li><li>玻璃晴朗，橘子辉煌。</li><li>夏天太浪漫了，我想请它吃顿饭，如果你有空，可以一起来。</li><li>收集了一千一万个夏天的文案，但这个夏天是什么样的只有我们知道。</li><li>仲夏的凉风吹走炙热的焦虑，橙色黄昏相拥薄荷的黎明。</li><li>西瓜的清甜在于第一口，心里的悸动在于第一眼。</li><li>在夏天，我们吃绿豆、桃、樱桃和甜瓜。在各种意义上都漫长且愉快，日子发出声响。</li><li>窗外的风吹动叶子，带来炎热又清新的味道。</li><li>我们没有小桥流水人家，我们有的是冰淇淋和冰镇西瓜。<blockquote><p>人回到原点,只会忘记一切,重复错误,永劫轮回。你何不放开一点,尝试接受新事物,未必不是一件好事</p></blockquote></li></ol><p><img src="/images/68134515_p0.png" alt="殇雪" title="图片 "></p><h2 id="wen-an"><a href="#文案" class="headerlink" title="文案"></a>文案<a href="#wen-an" class="header-anchor">#</a></h2><blockquote><p>所有美好事物源源不断地都在夏天来了<br>比如 傍晚街道凉爽的晚风 清晨和煦的阳光 柠檬汽水拉开扣的悦耳 热出汗后的一口冻成冰喳的雪碧 湛蓝天空上像草莓软卷一样的云朵 以及其实廉价世俗却也吸引着我的摊边小吃 一切事物在夏天这个名词下熠熠生辉 更心动的是 你也和夏天一起来了</p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Private </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/05/14/hello-world/"/>
      <url>/2022/05/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start<a href="#quick-start" class="header-anchor">#</a></h2><h3 id="create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post<a href="#create-a-new-post" class="header-anchor">#</a></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server<a href="#run-server" class="header-anchor">#</a></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files<a href="#generate-static-files" class="header-anchor">#</a></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites<a href="#deploy-to-remote-sites" class="header-anchor">#</a></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
